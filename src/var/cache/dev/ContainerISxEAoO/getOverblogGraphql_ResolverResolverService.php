<?php

namespace ContainerISxEAoO;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getOverblogGraphql_ResolverResolverService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'overblog_graphql.resolver_resolver' shared service.
     *
     * @return \Overblog\GraphQLBundle\Resolver\ResolverResolver
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/overblog/graphql-bundle/src/Resolver/FluentResolverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/overblog/graphql-bundle/src/Resolver/AbstractResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/overblog/graphql-bundle/src/Resolver/AbstractProxyResolver.php';
        include_once \dirname(__DIR__, 4).'/vendor/overblog/graphql-bundle/src/Resolver/ResolverResolver.php';

        $container->services['overblog_graphql.resolver_resolver'] = $instance = new \Overblog\GraphQLBundle\Resolver\ResolverResolver();

        $instance->addSolution('App\\GraphQL\\Resolver\\ShortnerUrlResolver', [0 => [0 => $container, 1 => 'get'], 1 => [0 => 'App\\GraphQL\\Resolver\\ShortnerUrlResolver']], [], ['id' => 'App\\GraphQL\\Resolver\\ShortnerUrlResolver', 'aliases' => [], 'method' => '__invoke']);
        $instance->addSolution('App\\GraphQL\\Resolver\\ShortnerUrlResolver::resolve', [0 => [0 => $container, 1 => 'get'], 1 => [0 => 'App\\GraphQL\\Resolver\\ShortnerUrlResolver']], [0 => 'ShortnerUrl'], ['id' => 'App\\GraphQL\\Resolver\\ShortnerUrlResolver', 'aliases' => [0 => 'ShortnerUrl'], 'method' => 'resolve']);
        $instance->addSolution('Overblog\\GraphQLBundle\\GraphQL\\Relay\\Mutation\\MutationFieldResolver', [0 => [0 => $container, 1 => 'get'], 1 => [0 => 'Overblog\\GraphQLBundle\\GraphQL\\Relay\\Mutation\\MutationFieldResolver']], [0 => 'relay_mutation_field'], ['id' => 'Overblog\\GraphQLBundle\\GraphQL\\Relay\\Mutation\\MutationFieldResolver', 'aliases' => [0 => 'relay_mutation_field'], 'method' => '__invoke']);
        $instance->addSolution('Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\GlobalIdFieldResolver', [0 => [0 => $container, 1 => 'get'], 1 => [0 => 'Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\GlobalIdFieldResolver']], [0 => 'relay_globalid_field'], ['id' => 'Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\GlobalIdFieldResolver', 'aliases' => [0 => 'relay_globalid_field'], 'method' => '__invoke']);
        $instance->addSolution('Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\NodeFieldResolver', [0 => [0 => $container, 1 => 'get'], 1 => [0 => 'Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\NodeFieldResolver']], [0 => 'relay_node_field'], ['id' => 'Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\NodeFieldResolver', 'aliases' => [0 => 'relay_node_field'], 'method' => '__invoke']);
        $instance->addSolution('Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\PluralIdentifyingRootFieldResolver', [0 => [0 => $container, 1 => 'get'], 1 => [0 => 'Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\PluralIdentifyingRootFieldResolver']], [0 => 'relay_plural_identifying_field'], ['id' => 'Overblog\\GraphQLBundle\\GraphQL\\Relay\\Node\\PluralIdentifyingRootFieldResolver', 'aliases' => [0 => 'relay_plural_identifying_field'], 'method' => '__invoke']);

        return $instance;
    }
}
